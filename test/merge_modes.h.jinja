// WARNING: This file was auto-generated by: {{ script }}
#include "evdev-scancodes.h"
#include <xkbcommon/xkbcommon.h>

#include "src/utils.h"
#include "test.h"

{% macro make_test(type, tests_group) -%}
    const char keymap_{{ tests_group.name }}_{{ type }}[] =
        "xkb_keymap {\n"
        "  xkb_keycodes { include \"evdev\" };\n"
        "  xkb_types { include \"complete\" };\n"
        "  xkb_compat { include \"basic\" };\n"
        "  xkb_symbols { include \"pc+{{symbols_file}}({{ tests_group.name }}_base)
        {{- '|' if type == 'augment' else '+' -}}
        {{symbols_file}}({{ tests_group.name }}_new)\" };"
        "};";
    fprintf(stderr, "*** test_merge_modes: {{ tests_group.name }}, {{ type }} ***\n");
    keymap = test_compile_buffer(ctx, keymap_{{ tests_group.name }}_{{type}},
                                 ARRAY_SIZE(keymap_{{ tests_group.name }}_{{type}}));
    assert(test_key_seq(keymap,
        {%- for entry in tests_group.tests +%}
        {{ entry.key.c }}, BOTH, {{ entry[type].levels[0].keysyms_c }}, {%
            if entry[type].levels|length > 1 -%}
        NEXT,
        KEY_LEFTSHIFT, DOWN, XKB_KEY_Shift_L, NEXT,
        {{ entry.key.c }}, BOTH, {{ entry[type].levels[1].keysyms_c }}, NEXT,
        KEY_LEFTSHIFT, UP, XKB_KEY_Shift_L,
        {%- endif %}{% if not loop.last %} NEXT,{% endif %}
        {% endfor %} FINISH
    ));
    xkb_keymap_unref(keymap);
{%- endmacro %}

static void
test_merge_modes(struct xkb_context *ctx)
{
    struct xkb_keymap *keymap;

    {% for tests_group in tests_groups %}
    /****************************************************************
     * Test group: {{ tests_group.name }}
     ****************************************************************/

    /* Mode: Augment */
    {{ make_test("augment", tests_group) }}

    /* Mode: Override */
    {{ make_test("override", tests_group) }}
    {% endfor %}
}
