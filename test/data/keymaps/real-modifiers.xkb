xkb_keymap {
xkb_keycodes "test" {
    minimum = 8;
    maximum = 255;
	<LVL3>  = 92;
    <LFSH>  = 50;
	<RTSH>  = 62;
	<LALT>  = 64;
	<RALT>  = 108;
	<LWIN>  = 133;
	<RWIN>  = 134;
	<LCTL>  = 37;
	<RCTL>  = 105;
	<CAPS>  = 66;

	<AD01> = 24;
	<AD02> = 25;
	<AD03> = 26;
	<AD04> = 27;
	<AD05> = 28;
	<AD06> = 29;
	<AD07> = 30;
	<AD08> = 31;
	<AD09> = 32;
};

xkb_types "complete" {
    // Define a buch of virtual modifier to test mappings to Mod5-Mod10 real
    // modifiers. VMod11 will be mapped to Mod5+Mod6.
    virtual_modifiers VMod5,VMod6,VMod6,VMod7,VMod8,VMod9,VMod10,VMod11;

    type "ONE_LEVEL" {
        modifiers= none;
        level_name[Level1]= "Any";
    };
	type "TWO_LEVEL" {
		modifiers= Shift;
		map[Shift]= 2;
		level_name[1]= "Base";
		level_name[2]= "Shift";
	};
    type "SOOO_MANY_LEVELS" {
        modifiers = Shift+VMod5+VMod6+VMod6+VMod7+VMod8+VMod9+VMod10+VMod11;
        map[Shift] = 2;
        map[VMod5] = 3;
        map[VMod6] = 4;
        map[VMod6+Shift] = 5;
        map[VMod7] = 6;
        map[VMod8] = 7;
        map[VMod9] = 8;
        map[VMod10] = 9;
        map[VMod11] = 10;
        level_name[1] = "1";
        level_name[2] = "2";
        level_name[3] = "3";
        level_name[4] = "4";
        level_name[5] = "5";
        level_name[6] = "6";
        level_name[7] = "7";
        level_name[8] = "8";
        level_name[9] = "9";
        level_name[10] = "10";
    };
};
xkb_compatibility "complete" {
    interpret.useModMapMods= AnyLevel;
    interpret.repeat= False;
    interpret.locking= False;

    virtual_modifiers VMod5,VMod6,VMod7,VMod8,VMod9,VMod10,VMod11;

    interpret Any+AnyOf(all) {
        action = SetMods(modifiers=modMapMods,clearLocks);
    };

    // Define some letter keysyms as custom modifiers
    interpret Q {
        useModMapMods = level1;
        virtualModifier = VMod5;
        action = SetMods(modifiers=VMod5);
    };
    interpret W {
        useModMapMods = level1;
        virtualModifier = VMod6;
        action = SetMods(modifiers=VMod6);
    };
    interpret E {
        useModMapMods = level1;
        virtualModifier = VMod7;
        action = SetMods(modifiers=VMod7);
    };
    interpret R {
        useModMapMods = level1;
        virtualModifier = VMod8;
        action = SetMods(modifiers=VMod8);
    };
    interpret T {
        useModMapMods = level1;
        virtualModifier = VMod9;
        action = SetMods(modifiers=VMod9);
    };
    interpret Y {
        useModMapMods = level1;
        virtualModifier = VMod10;
        action = SetMods(modifiers=VMod10);
    };
    interpret U {
        useModMapMods = level1;
        virtualModifier = VMod11;
        action = SetMods(modifiers=VMod11);
    };
    interpret I {
        useModMapMods = level1;
        virtualModifier = VMod11;
        action = SetMods(modifiers=VMod11);
    };
};
xkb_symbols {
    name[group1]="Test";

    // Map the modifiers. The letter keysyms only serve to map
    // the modifier actions (see interpret entries above).

    key <LFSH> { [Shift_L] };
    modifier_map Shift { <LFSH> };

    // virtual modifier: VMod5
    key <AD01> { [Q] };
    modifier_map Mod5 { <AD01> };

    // virtual modifier: VMod6
    key <AD02> { [W] };
    modifier_map Mod6 { <AD02> }; // real modifier not supported by X11

    // virtual modifier: VMod7
    key <AD03> { [E] };
    modifier_map Mod7 { <AD03> }; // real modifier not supported by X11

    // virtual modifier: VMod8
    key <AD04> { [R] };
    modifier_map Mod8 { <AD04> }; // real modifier not supported by X11

    // virtual modifier: VMod9
    key <AD05> { [T] };
    modifier_map Mod9 { <AD05> }; // real modifier not supported by X11

    // virtual modifier: VMod10
    key <AD06> { [Y] };
    modifier_map Mod10 { <AD06> }; // real modifier not supported by X11

    // virtual modifier: VMod11 (Mod5+Mod6)
    key <AD07> { [U] };
    modifier_map Mod5 { <AD07> };
    key <AD08> { [I] };
    modifier_map Mod6 { <AD08> }; // real modifier not supported by X11

    // Key to test that all the levels work
    key <AD09> {
        type[Group1]="SOOO_MANY_LEVELS",
        symbols[Group1]=[1,2,3,4,5,6,7,8,9,A]
    };

};
};
