// WARNING: This file was auto-generated by: scripts/update-symbols-tests.py
xkb_symbols "base" {
	key <T001> {  };
	key <T002> {  };
	key <T003> {  };
	key <T004> {  };
	key <T005> {  };
	key <T006> {  };
	key <T007> { symbols=[a] };
	key <T008> { actions=[SetGroup(group=2)] };
	key <T009> { symbols=[a], actions=[SetGroup(group=2)] };
	key <T010> { symbols=[a] };
	key <T011> { actions=[SetGroup(group=2)] };
	key <T012> { symbols=[a], actions=[SetGroup(group=2)] };
	key <T017> { actions=[NoAction(), SetGroup(group=2)] };
	key <T018> { symbols=[NoSymbol, A], actions=[NoAction(), SetGroup(group=2)] };
	key <T016> { symbols=[NoSymbol, A] };
	key <T020> { actions=[NoAction(), SetGroup(group=2)] };
	key <T021> { symbols=[NoSymbol, A], actions=[NoAction(), SetGroup(group=2)] };
	key <T023> { actions=[NoAction(), SetGroup(group=2), NoAction()] };
	key <T024> { symbols=[NoSymbol, A, NoSymbol], actions=[NoAction(), SetGroup(group=2), NoAction()] };
	key <T022> { symbols=[NoSymbol, A, NoSymbol] };
	key <T025> { symbols=[a, A] };
	key <T026> { actions=[SetGroup(group=2), SetGroup(group=2)] };
	key <T027> { symbols=[a, A], actions=[SetGroup(group=2), SetGroup(group=2)] };
	key <T028> { symbols=[a, A, a] };
	key <T029> { actions=[SetGroup(group=2), SetGroup(group=2), SetGroup(group=2)] };
	key <T030> { symbols=[a, A, a], actions=[SetGroup(group=2), SetGroup(group=2), SetGroup(group=2)] };
	key <T031> { symbols=[NoSymbol, NoSymbol] };
	key <T032> { actions=[NoAction(), NoAction()] };
	key <T033> { symbols=[NoSymbol, NoSymbol] };
	key <T035> { actions=[NoAction(), NoAction()] };
	key <T036> { symbols=[NoSymbol, NoSymbol] };
	key <T034> { symbols=[NoSymbol, NoSymbol] };
	key <T037> { symbols=[NoSymbol, NoSymbol] };
	key <T038> { actions=[NoAction(), NoAction()] };
	key <T039> { symbols=[NoSymbol, NoSymbol] };
	key <T043> { symbols=[NoSymbol, NoSymbol] };
	key <T044> { actions=[NoAction(), NoAction()] };
	key <T045> { symbols=[NoSymbol, NoSymbol] };
	key <T046> { symbols=[a, A] };
	key <T047> { actions=[SetGroup(group=2), SetGroup(group=2)] };
	key <T048> { symbols=[a, A], actions=[SetGroup(group=2), SetGroup(group=2)] };
	key <T050> { actions=[SetGroup(group=2), SetGroup(group=2)] };
	key <T051> { symbols=[a, A], actions=[SetGroup(group=2), SetGroup(group=2)] };
	key <T049> { symbols=[a, A] };
	key <T052> { symbols=[a, A] };
	key <T053> { actions=[SetGroup(group=2), SetGroup(group=2)] };
	key <T054> { symbols=[a, A], actions=[SetGroup(group=2), SetGroup(group=2)] };
	key <T055> { symbols=[a, A] };
	key <T056> { actions=[SetGroup(group=2), SetGroup(group=2)] };
	key <T057> { symbols=[a, A], actions=[SetGroup(group=2), SetGroup(group=2)] };
	key <T060> { symbols=[a, NoSymbol], actions=[NoAction(), SetGroup(group=2)] };
};

xkb_symbols "new" {

	////// Trivial cases //////
	key <T001> {  };
	key <T002> {  };
	key <T003> {  };
	key <T004> { symbols=[Greek_alpha] };
	key <T005> { actions=[SetGroup(group=3)] };
	key <T006> { symbols=[Greek_alpha], actions=[SetGroup(group=3)] };
	key <T007> {  };
	key <T008> {  };
	key <T009> {  };

	////// Same key //////
	key <T010> { symbols=[a] };
	key <T011> { actions=[SetGroup(group=2)] };
	key <T012> { symbols=[a], actions=[SetGroup(group=2)] };

	////// Mismatch levels count //////
	key <T017> { actions=[SetGroup(group=3), NoAction(), NoAction()] };
	key <T018> { symbols=[Greek_alpha, NoSymbol, NoSymbol], actions=[SetGroup(group=3), NoAction(), NoAction()] };
	key <T016> { symbols=[Greek_alpha, NoSymbol, NoSymbol] };
	key <T020> { actions=[SetGroup(group=3), NoAction(), NoAction()] };
	key <T021> { symbols=[Greek_alpha, NoSymbol, NoSymbol], actions=[SetGroup(group=3), NoAction(), NoAction()] };
	key <T023> { actions=[SetGroup(group=3), NoAction()] };
	key <T024> { symbols=[Greek_alpha, NoSymbol], actions=[SetGroup(group=3), NoAction()] };
	key <T022> { symbols=[Greek_alpha, NoSymbol] };
	key <T025> { symbols=[Greek_alpha, Greek_ALPHA, Greek_alpha] };
	key <T026> { actions=[SetGroup(group=3), SetGroup(group=3), SetGroup(group=3)] };
	key <T027> { symbols=[Greek_alpha, Greek_ALPHA, Greek_alpha], actions=[SetGroup(group=3), SetGroup(group=3), SetGroup(group=3)] };
	key <T028> { symbols=[Greek_alpha, Greek_ALPHA] };
	key <T029> { actions=[SetGroup(group=3), SetGroup(group=3)] };
	key <T030> { symbols=[Greek_alpha, Greek_ALPHA], actions=[SetGroup(group=3), SetGroup(group=3)] };

	////// Single keysyms -> single keysyms //////
	key <T031> { symbols=[NoSymbol, NoSymbol] };
	key <T032> { actions=[NoAction(), NoAction()] };
	key <T033> { symbols=[NoSymbol, NoSymbol] };
	key <T035> { actions=[SetGroup(group=3), NoAction()] };
	key <T036> { symbols=[Greek_alpha, NoSymbol], actions=[SetGroup(group=3), NoAction()] };
	key <T034> { symbols=[Greek_alpha, NoSymbol] };
	key <T037> { symbols=[NoSymbol, Greek_ALPHA] };
	key <T038> { actions=[NoAction(), SetGroup(group=3)] };
	key <T039> { symbols=[NoSymbol, Greek_ALPHA], actions=[NoAction(), SetGroup(group=3)] };
	key <T043> { symbols=[Greek_alpha, Greek_ALPHA] };
	key <T044> { actions=[SetGroup(group=3), SetGroup(group=3)] };
	key <T045> { symbols=[Greek_alpha, Greek_ALPHA], actions=[SetGroup(group=3), SetGroup(group=3)] };
	key <T046> { symbols=[NoSymbol, NoSymbol] };
	key <T047> { actions=[NoAction(), NoAction()] };
	key <T048> { symbols=[NoSymbol, NoSymbol] };
	key <T050> { actions=[SetGroup(group=3), NoAction()] };
	key <T051> { symbols=[Greek_alpha, NoSymbol], actions=[SetGroup(group=3), NoAction()] };
	key <T049> { symbols=[Greek_alpha, NoSymbol] };
	key <T052> { symbols=[NoSymbol, Greek_ALPHA] };
	key <T053> { actions=[NoAction(), SetGroup(group=3)] };
	key <T054> { symbols=[NoSymbol, Greek_ALPHA], actions=[NoAction(), SetGroup(group=3)] };
	key <T055> { symbols=[Greek_alpha, Greek_ALPHA] };
	key <T056> { actions=[SetGroup(group=3), SetGroup(group=3)] };
	key <T057> { symbols=[Greek_alpha, Greek_ALPHA], actions=[SetGroup(group=3), SetGroup(group=3)] };
	key <T060> { symbols=[NoSymbol, X], actions=[SetGroup(group=3), NoAction()] };
};

xkb_symbols "augment" {

	////// Trivial cases //////
	key <T001> {  };
	key <T002> {  };
	key <T003> {  };
	key <T004> { symbols=[Greek_alpha] };
	key <T005> { actions=[SetGroup(group=3)] };
	key <T006> { symbols=[Greek_alpha], actions=[SetGroup(group=3)] };
	key <T007> { symbols=[a] };
	key <T008> { actions=[SetGroup(group=2)] };
	key <T009> { symbols=[a], actions=[SetGroup(group=2)] };

	////// Same key //////
	key <T010> { symbols=[a] };
	key <T011> { actions=[SetGroup(group=2)] };
	key <T012> { symbols=[a], actions=[SetGroup(group=2)] };

	////// Mismatch levels count //////
	key <T017> { actions=[SetGroup(group=3), SetGroup(group=2), NoAction()] };
	key <T018> { symbols=[Greek_alpha, A, NoSymbol], actions=[SetGroup(group=3), SetGroup(group=2), NoAction()] };
	key <T016> { symbols=[Greek_alpha, A] };
	key <T020> { actions=[SetGroup(group=3), SetGroup(group=2), NoAction()] };
	key <T021> { symbols=[Greek_alpha, A, NoSymbol], actions=[SetGroup(group=3), SetGroup(group=2), NoAction()] };
	key <T023> { actions=[SetGroup(group=3), SetGroup(group=2), NoAction()] };
	key <T024> { symbols=[Greek_alpha, A, NoSymbol], actions=[SetGroup(group=3), SetGroup(group=2), NoAction()] };
	key <T022> { symbols=[Greek_alpha, A] };
	key <T025> { symbols=[a, A, Greek_alpha] };
	key <T026> { actions=[SetGroup(group=2), SetGroup(group=2), SetGroup(group=3)] };
	key <T027> { symbols=[a, A, Greek_alpha], actions=[SetGroup(group=2), SetGroup(group=2), SetGroup(group=3)] };
	key <T028> { symbols=[a, A, a] };
	key <T029> { actions=[SetGroup(group=2), SetGroup(group=2), SetGroup(group=2)] };
	key <T030> { symbols=[a, A, a], actions=[SetGroup(group=2), SetGroup(group=2), SetGroup(group=2)] };

	////// Single keysyms -> single keysyms //////
	key <T031> { symbols=[NoSymbol, NoSymbol] };
	key <T032> { actions=[NoAction(), NoAction()] };
	key <T033> { symbols=[NoSymbol, NoSymbol] };
	key <T035> { actions=[SetGroup(group=3), NoAction()] };
	key <T036> { symbols=[Greek_alpha, NoSymbol], actions=[SetGroup(group=3), NoAction()] };
	key <T034> { symbols=[Greek_alpha] };
	key <T037> { symbols=[NoSymbol, Greek_ALPHA] };
	key <T038> { actions=[NoAction(), SetGroup(group=3)] };
	key <T039> { symbols=[NoSymbol, Greek_ALPHA], actions=[NoAction(), SetGroup(group=3)] };
	key <T043> { symbols=[Greek_alpha, Greek_ALPHA] };
	key <T044> { actions=[SetGroup(group=3), SetGroup(group=3)] };
	key <T045> { symbols=[Greek_alpha, Greek_ALPHA], actions=[SetGroup(group=3), SetGroup(group=3)] };
	key <T046> { symbols=[a, A] };
	key <T047> { actions=[SetGroup(group=2), SetGroup(group=2)] };
	key <T048> { symbols=[a, A], actions=[SetGroup(group=2), SetGroup(group=2)] };
	key <T050> { actions=[SetGroup(group=2), SetGroup(group=2)] };
	key <T051> { symbols=[a, A], actions=[SetGroup(group=2), SetGroup(group=2)] };
	key <T049> { symbols=[a, A] };
	key <T052> { symbols=[a, A] };
	key <T053> { actions=[SetGroup(group=2), SetGroup(group=2)] };
	key <T054> { symbols=[a, A], actions=[SetGroup(group=2), SetGroup(group=2)] };
	key <T055> { symbols=[a, A] };
	key <T056> { actions=[SetGroup(group=2), SetGroup(group=2)] };
	key <T057> { symbols=[a, A], actions=[SetGroup(group=2), SetGroup(group=2)] };
	key <T060> { symbols=[a, X], actions=[SetGroup(group=3), SetGroup(group=2)] };
};


xkb_symbols "override" {

	////// Trivial cases //////
	key <T001> {  };
	key <T002> {  };
	key <T003> {  };
	key <T004> { symbols=[Greek_alpha] };
	key <T005> { actions=[SetGroup(group=3)] };
	key <T006> { symbols=[Greek_alpha], actions=[SetGroup(group=3)] };
	key <T007> { symbols=[a] };
	key <T008> { actions=[SetGroup(group=2)] };
	key <T009> { symbols=[a], actions=[SetGroup(group=2)] };

	////// Same key //////
	key <T010> { symbols=[a] };
	key <T011> { actions=[SetGroup(group=2)] };
	key <T012> { symbols=[a], actions=[SetGroup(group=2)] };

	////// Mismatch levels count //////
	key <T017> { actions=[SetGroup(group=3), SetGroup(group=2), NoAction()] };
	key <T018> { symbols=[Greek_alpha, A, NoSymbol], actions=[SetGroup(group=3), SetGroup(group=2), NoAction()] };
	key <T016> { symbols=[Greek_alpha, A] };
	key <T020> { actions=[SetGroup(group=3), SetGroup(group=2), NoAction()] };
	key <T021> { symbols=[Greek_alpha, A, NoSymbol], actions=[SetGroup(group=3), SetGroup(group=2), NoAction()] };
	key <T023> { actions=[SetGroup(group=3), SetGroup(group=2), NoAction()] };
	key <T024> { symbols=[Greek_alpha, A, NoSymbol], actions=[SetGroup(group=3), SetGroup(group=2), NoAction()] };
	key <T022> { symbols=[Greek_alpha, A] };
	key <T025> { symbols=[Greek_alpha, Greek_ALPHA, Greek_alpha] };
	key <T026> { actions=[SetGroup(group=3), SetGroup(group=3), SetGroup(group=3)] };
	key <T027> { symbols=[Greek_alpha, Greek_ALPHA, Greek_alpha], actions=[SetGroup(group=3), SetGroup(group=3), SetGroup(group=3)] };
	key <T028> { symbols=[Greek_alpha, Greek_ALPHA, a] };
	key <T029> { actions=[SetGroup(group=3), SetGroup(group=3), SetGroup(group=2)] };
	key <T030> { symbols=[Greek_alpha, Greek_ALPHA, a], actions=[SetGroup(group=3), SetGroup(group=3), SetGroup(group=2)] };

	////// Single keysyms -> single keysyms //////
	key <T031> { symbols=[NoSymbol, NoSymbol] };
	key <T032> { actions=[NoAction(), NoAction()] };
	key <T033> { symbols=[NoSymbol, NoSymbol] };
	key <T035> { actions=[SetGroup(group=3), NoAction()] };
	key <T036> { symbols=[Greek_alpha, NoSymbol], actions=[SetGroup(group=3), NoAction()] };
	key <T034> { symbols=[Greek_alpha] };
	key <T037> { symbols=[NoSymbol, Greek_ALPHA] };
	key <T038> { actions=[NoAction(), SetGroup(group=3)] };
	key <T039> { symbols=[NoSymbol, Greek_ALPHA], actions=[NoAction(), SetGroup(group=3)] };
	key <T043> { symbols=[Greek_alpha, Greek_ALPHA] };
	key <T044> { actions=[SetGroup(group=3), SetGroup(group=3)] };
	key <T045> { symbols=[Greek_alpha, Greek_ALPHA], actions=[SetGroup(group=3), SetGroup(group=3)] };
	key <T046> { symbols=[a, A] };
	key <T047> { actions=[SetGroup(group=2), SetGroup(group=2)] };
	key <T048> { symbols=[a, A], actions=[SetGroup(group=2), SetGroup(group=2)] };
	key <T050> { actions=[SetGroup(group=3), SetGroup(group=2)] };
	key <T051> { symbols=[Greek_alpha, A], actions=[SetGroup(group=3), SetGroup(group=2)] };
	key <T049> { symbols=[Greek_alpha, A] };
	key <T052> { symbols=[a, Greek_ALPHA] };
	key <T053> { actions=[SetGroup(group=2), SetGroup(group=3)] };
	key <T054> { symbols=[a, Greek_ALPHA], actions=[SetGroup(group=2), SetGroup(group=3)] };
	key <T055> { symbols=[Greek_alpha, Greek_ALPHA] };
	key <T056> { actions=[SetGroup(group=3), SetGroup(group=3)] };
	key <T057> { symbols=[Greek_alpha, Greek_ALPHA], actions=[SetGroup(group=3), SetGroup(group=3)] };
	key <T060> { symbols=[a, X], actions=[SetGroup(group=3), SetGroup(group=2)] };
};


xkb_symbols "group2" {
	key <T001> { [Ukrainian_i, Ukrainian_I, Ukrainian_yi, Ukrainian_YI] };
	key <T002> { [Ukrainian_i, Ukrainian_I, Ukrainian_yi, Ukrainian_YI] };
	key <T003> { [Ukrainian_i, Ukrainian_I, Ukrainian_yi, Ukrainian_YI] };
	key <T004> { [Ukrainian_i, Ukrainian_I, Ukrainian_yi, Ukrainian_YI] };
	key <T005> { [Ukrainian_i, Ukrainian_I, Ukrainian_yi, Ukrainian_YI] };
	key <T006> { [Ukrainian_i, Ukrainian_I, Ukrainian_yi, Ukrainian_YI] };
	key <T007> { [Ukrainian_i, Ukrainian_I, Ukrainian_yi, Ukrainian_YI] };
	key <T008> { [Ukrainian_i, Ukrainian_I, Ukrainian_yi, Ukrainian_YI] };
	key <T009> { [Ukrainian_i, Ukrainian_I, Ukrainian_yi, Ukrainian_YI] };
	key <T010> { [Ukrainian_i, Ukrainian_I, Ukrainian_yi, Ukrainian_YI] };
	key <T011> { [Ukrainian_i, Ukrainian_I, Ukrainian_yi, Ukrainian_YI] };
	key <T012> { [Ukrainian_i, Ukrainian_I, Ukrainian_yi, Ukrainian_YI] };
	key <T016> { [Ukrainian_i, Ukrainian_I, Ukrainian_yi, Ukrainian_YI] };
	key <T017> { [Ukrainian_i, Ukrainian_I, Ukrainian_yi, Ukrainian_YI] };
	key <T018> { [Ukrainian_i, Ukrainian_I, Ukrainian_yi, Ukrainian_YI] };
	key <T020> { [Ukrainian_i, Ukrainian_I, Ukrainian_yi, Ukrainian_YI] };
	key <T021> { [Ukrainian_i, Ukrainian_I, Ukrainian_yi, Ukrainian_YI] };
	key <T022> { [Ukrainian_i, Ukrainian_I, Ukrainian_yi, Ukrainian_YI] };
	key <T023> { [Ukrainian_i, Ukrainian_I, Ukrainian_yi, Ukrainian_YI] };
	key <T024> { [Ukrainian_i, Ukrainian_I, Ukrainian_yi, Ukrainian_YI] };
	key <T025> { [Ukrainian_i, Ukrainian_I, Ukrainian_yi, Ukrainian_YI] };
	key <T026> { [Ukrainian_i, Ukrainian_I, Ukrainian_yi, Ukrainian_YI] };
	key <T027> { [Ukrainian_i, Ukrainian_I, Ukrainian_yi, Ukrainian_YI] };
	key <T028> { [Ukrainian_i, Ukrainian_I, Ukrainian_yi, Ukrainian_YI] };
	key <T029> { [Ukrainian_i, Ukrainian_I, Ukrainian_yi, Ukrainian_YI] };
	key <T030> { [Ukrainian_i, Ukrainian_I, Ukrainian_yi, Ukrainian_YI] };
	key <T031> { [Ukrainian_i, Ukrainian_I, Ukrainian_yi, Ukrainian_YI] };
	key <T032> { [Ukrainian_i, Ukrainian_I, Ukrainian_yi, Ukrainian_YI] };
	key <T033> { [Ukrainian_i, Ukrainian_I, Ukrainian_yi, Ukrainian_YI] };
	key <T034> { [Ukrainian_i, Ukrainian_I, Ukrainian_yi, Ukrainian_YI] };
	key <T035> { [Ukrainian_i, Ukrainian_I, Ukrainian_yi, Ukrainian_YI] };
	key <T036> { [Ukrainian_i, Ukrainian_I, Ukrainian_yi, Ukrainian_YI] };
	key <T037> { [Ukrainian_i, Ukrainian_I, Ukrainian_yi, Ukrainian_YI] };
	key <T038> { [Ukrainian_i, Ukrainian_I, Ukrainian_yi, Ukrainian_YI] };
	key <T039> { [Ukrainian_i, Ukrainian_I, Ukrainian_yi, Ukrainian_YI] };
	key <T043> { [Ukrainian_i, Ukrainian_I, Ukrainian_yi, Ukrainian_YI] };
	key <T044> { [Ukrainian_i, Ukrainian_I, Ukrainian_yi, Ukrainian_YI] };
	key <T045> { [Ukrainian_i, Ukrainian_I, Ukrainian_yi, Ukrainian_YI] };
	key <T046> { [Ukrainian_i, Ukrainian_I, Ukrainian_yi, Ukrainian_YI] };
	key <T047> { [Ukrainian_i, Ukrainian_I, Ukrainian_yi, Ukrainian_YI] };
	key <T048> { [Ukrainian_i, Ukrainian_I, Ukrainian_yi, Ukrainian_YI] };
	key <T049> { [Ukrainian_i, Ukrainian_I, Ukrainian_yi, Ukrainian_YI] };
	key <T050> { [Ukrainian_i, Ukrainian_I, Ukrainian_yi, Ukrainian_YI] };
	key <T051> { [Ukrainian_i, Ukrainian_I, Ukrainian_yi, Ukrainian_YI] };
	key <T052> { [Ukrainian_i, Ukrainian_I, Ukrainian_yi, Ukrainian_YI] };
	key <T053> { [Ukrainian_i, Ukrainian_I, Ukrainian_yi, Ukrainian_YI] };
	key <T054> { [Ukrainian_i, Ukrainian_I, Ukrainian_yi, Ukrainian_YI] };
	key <T055> { [Ukrainian_i, Ukrainian_I, Ukrainian_yi, Ukrainian_YI] };
	key <T056> { [Ukrainian_i, Ukrainian_I, Ukrainian_yi, Ukrainian_YI] };
	key <T057> { [Ukrainian_i, Ukrainian_I, Ukrainian_yi, Ukrainian_YI] };
	key <T060> { [Ukrainian_i, Ukrainian_I, Ukrainian_yi, Ukrainian_YI] };
};

xkb_symbols "group3" {
	key <T001> { [ch, Ch, c_h, C_h] };
	key <T002> { [ch, Ch, c_h, C_h] };
	key <T003> { [ch, Ch, c_h, C_h] };
	key <T004> { [ch, Ch, c_h, C_h] };
	key <T005> { [ch, Ch, c_h, C_h] };
	key <T006> { [ch, Ch, c_h, C_h] };
	key <T007> { [ch, Ch, c_h, C_h] };
	key <T008> { [ch, Ch, c_h, C_h] };
	key <T009> { [ch, Ch, c_h, C_h] };
	key <T010> { [ch, Ch, c_h, C_h] };
	key <T011> { [ch, Ch, c_h, C_h] };
	key <T012> { [ch, Ch, c_h, C_h] };
	key <T016> { [ch, Ch, c_h, C_h] };
	key <T017> { [ch, Ch, c_h, C_h] };
	key <T018> { [ch, Ch, c_h, C_h] };
	key <T020> { [ch, Ch, c_h, C_h] };
	key <T021> { [ch, Ch, c_h, C_h] };
	key <T022> { [ch, Ch, c_h, C_h] };
	key <T023> { [ch, Ch, c_h, C_h] };
	key <T024> { [ch, Ch, c_h, C_h] };
	key <T025> { [ch, Ch, c_h, C_h] };
	key <T026> { [ch, Ch, c_h, C_h] };
	key <T027> { [ch, Ch, c_h, C_h] };
	key <T028> { [ch, Ch, c_h, C_h] };
	key <T029> { [ch, Ch, c_h, C_h] };
	key <T030> { [ch, Ch, c_h, C_h] };
	key <T031> { [ch, Ch, c_h, C_h] };
	key <T032> { [ch, Ch, c_h, C_h] };
	key <T033> { [ch, Ch, c_h, C_h] };
	key <T034> { [ch, Ch, c_h, C_h] };
	key <T035> { [ch, Ch, c_h, C_h] };
	key <T036> { [ch, Ch, c_h, C_h] };
	key <T037> { [ch, Ch, c_h, C_h] };
	key <T038> { [ch, Ch, c_h, C_h] };
	key <T039> { [ch, Ch, c_h, C_h] };
	key <T043> { [ch, Ch, c_h, C_h] };
	key <T044> { [ch, Ch, c_h, C_h] };
	key <T045> { [ch, Ch, c_h, C_h] };
	key <T046> { [ch, Ch, c_h, C_h] };
	key <T047> { [ch, Ch, c_h, C_h] };
	key <T048> { [ch, Ch, c_h, C_h] };
	key <T049> { [ch, Ch, c_h, C_h] };
	key <T050> { [ch, Ch, c_h, C_h] };
	key <T051> { [ch, Ch, c_h, C_h] };
	key <T052> { [ch, Ch, c_h, C_h] };
	key <T053> { [ch, Ch, c_h, C_h] };
	key <T054> { [ch, Ch, c_h, C_h] };
	key <T055> { [ch, Ch, c_h, C_h] };
	key <T056> { [ch, Ch, c_h, C_h] };
	key <T057> { [ch, Ch, c_h, C_h] };
	key <T060> { [ch, Ch, c_h, C_h] };
};
